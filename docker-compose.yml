version: "3.9"

services:
  simple-mm: &app
    build: 
      context: .
      dockerfile: ./docker/Dockerfile.server
      args:
        USER_ID: "${USER_ID:-1000}" 
        GROUP_ID: "${GROUP_ID:-1000}"
    command: bundle exec unicorn -c config/unicorn.rb
    ports:
      - '8010:8010'
    env_file:
      - ./api/.env
    environment:
      RACK_ENV: development
      DATABASE_URL: postgresql://violet:evergarden@db-00:5432/test_db?encoding=utf8&pool=5&timeout=5000
      JOB_WORKER_URL: redis://redis-00:6379/0
      CACHE_URL: redis://redis-00:6379/1
      MATCHMAKING_QUEUE_URL: redis://redis-00:6379/2
      WORKER_PROCESSES: 1
    volumes:
      - ./api:/opt/app
    links:
      - db-00
      - redis-00
    depends_on:
      - db-00
      - redis-00
  
  sidekiq-00: # Mimics build details for the server, but executes sidekiq instead, shares caches
    <<: *app
    command: bundle exec sidekiq
    ports: 
      - "8030:8010"
    links:
      - db-00
      - redis-00
    depends_on:
      - db-00
      - redis-00

  web-00:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.web-dev
    volumes:
      - ./web:/app
    links:
      - simple-mm
    ports:
      - '8020:8080'

  db-00: &db
    image: postgres:14.1
    volumes:
      - simple-mm-db:/var/lib/postgresql/data
    ports: 
      - "5432:5432"
    environment:
      POSTGRES_USER: violet
      POSTGRES_PASSWORD: evergarden
      POSTGRES_DB: test_db
    
  redis-00:
    image: redis:6.2.6-alpine
    command: redis-server
    ports:
      - "6379:6379"
    volumes:
      - simple-mm-redis:/var/lib/redis
      - ./api/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master

volumes:
  simple-mm-db:
  simple-mm-redis: